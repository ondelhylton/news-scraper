         <header>
            <div class="topNavMenu">
              <nav class="navbar navbar-expand-lg navbar overview-navbar">
                <a class="navbar-brand" href="https://therealdeal.com/"
                  ><img 
                  class="overview-nav-logo"
                  src="../images/smalllogo.png"
                    alt="back to search"
                    style="height:50px;"
                /></a>
         
                <div class="collapse navbar-collapse" id="navbarText">

                    <div class="nav-itemleft">
                        <a class="btn btn-danger" href="/saved">Saved Articles</a>
                      </div>

                      <div class="nav-item">
                        <a class="btn btn-danger clear">Clear</a>
                      </div>
        
                  <div class="nav-itemright">
                      <a class="btn btn-warning" href="/">Current Articles</a>
                    </div>

                </div>
              </nav>
            </div>
          </header>

          
<div class="row">
<div class="col-2"></div>
<br>

<div class="col-10">
  <div class="container-fluid article-container">
  {{#each articles}}
    <div data-_id={{this._id}} class="card">
    <div class="card-header">
      <h3>
        <a class="article-link" target="_blank" rel="noopener noreferrer" href="{{this.url}}">{{this.headline}}</a>
      </h3>
      <h5>{{this.time}}</h5>
    </div>


    <div class="card-body">
    <img src="{{this.image}}" alt="{{this.headline}}" height="205px">
    <br><br>
      <div class = "summary">
      {{this.summary}}
      <br><br>
      </div>
    
    <a class="btn btn-danger delete" style= "color:white">Delete Article</a>
    <a class='btn btn-danger notes' style= "color:white">Article Notes</a>
  </div>
  </div>
  {{/each}}


  {{#unless articles.length}}
    <br><br>
  <div class="card-blank">
    <div class="card-header text-center">
      <h4>You Don't Have Any Saved Articles</h4>
    </div>
      <div class="card-body text-center">
      <h4>
        <a href="/">Browse Recent Articles</a>
      </h4>
    </div>
  </div>
  {{/unless}}
</div>
</div> 
</div>



<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.0.0/js/bootstrap.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootbox.js/4.4.0/bootbox.min.js"></script>


<script>


$(document).ready(function() {
  var articleContainer = $(".article-container");

  $(document).on("click", ".btn.delete", handleArticleDelete);
  $(document).on("click", ".btn.notes", handleArticleNotes);
  $(document).on("click", ".btn.save", handleNoteSave);
  $(document).on("click", ".btn.note-delete", handleNoteDelete);
  $(".clear").on("click", handleArticleClear);

  function initPage() {
    $.get("/api/headlines?saved=true").then(function(data) {
      articleContainer.empty();
      if (data && data.length) {
        renderArticles(data);
      } else {

        renderEmpty();
      }
    });
  }

  function renderArticles(articles) {
    var articleCards = [];
    for (var i = 0; i < articles.length; i++) {
      articleCards.push(createCard(articles[i]));
    }
    articleContainer.append(articleCards);
  }

function createCard(article) {
    var card = $("<div class='card'>");
    var cardHeader = $("<div class='card-header'>").append(
      $("<h3>").append(
        $("<a class='article-link' target='_blank' rel='noopener noreferrer'>")
          .attr("href", article.url)
          .text(article.headline)
      )
      );
     var timeStamp = $("<h5>").text(article.time);
      cardHeader.append(timeStamp);
    

    var image =  $("<img>")
    image.attr('height', 205);
    image.attr("src", article.image);
    image.append("<br><br>");

    var summary = $("<div class= 'summary'>").text(article.summary + "...");
    summary.append("<br><br>");
    summary.prepend("<br>");

    var cardBody = $("<div class='card-body'>")
    cardBody.append(image);
    cardBody.append(summary);

    var deleteButton = $("<a class='btn btn-danger delete' style='color:white' id='save'>Delete From Saved</a>")
    deleteButton.append("<br>");
    cardBody.append(deleteButton);

    var notes = $("<a class='btn btn-danger notes'>Article Notes</a>");
    cardBody.append(notes);

    card.append(cardHeader, cardBody);
  
    card.data("_id", article._id);
    return card;
  }



  function renderEmpty() {
    var emptyAlert = $(
      [
        "<br><br>"
        "<div class='card-blank'>"
        "<div class='card-header text-center'>"
        "<h4>You Don't Have Any Saved Articles</h4>"
        "</div>"
        "<div class='card-body text-center'>"
        "<h4><a href="/">Browse Recent Articles</a></h4>"
        "</div>"
        "</div>"
      ].join("")
    );
    articleContainer.append(emptyAlert);
  }

  function renderNotesList(data) {e
    var notesToRender = [];
    var currentNote;
    if (!data.notes.length) {
      // If we have no notes, just display a message explaining this
      currentNote = $("<li class='list-group-item'>No notes for this article yet.</li>");
      notesToRender.push(currentNote);
    } else {
      // If we do have notes, go through each one
      for (var i = 0; i < data.notes.length; i++) {
        // Constructs an li element to contain our noteText and a delete button
        currentNote = $("<li class='list-group-item note'>")
          .text(data.notes[i].noteText)
          .append($("<button class='btn btn-danger note-delete'>x</button>"));
        // Store the note id on the delete button for easy access when trying to delete
        currentNote.children("button").data("_id", data.notes[i]._id);
        // Adding our currentNote to the notesToRender array
        notesToRender.push(currentNote);
      }
    }
    // Now append the notesToRender to the note-container inside the note modal
    $(".note-container").append(notesToRender);
  }

  function handleArticleDelete() {
    var articleToDelete = $(this)
      .parents(".card")
      .data();

    $(this)
      .parents(".card")
      .remove();
 
    $.ajax({
      method: "DELETE",
      url: "/api/headlines/" + articleToDelete._id
    }).then(function(data) {
      if (data.ok) {
        initPage();
      }
    });
  }
  function handleArticleNotes(event) {
    // This function handles opening the notes modal and displaying our notes
    // We grab the id of the article to get notes for from the card element the delete button sits inside
    var currentArticle = $(this)
      .parents(".card")
      .data();
    // Grab any notes with this headline/article id
    $.get("/api/notes/" + currentArticle._id).then(function(data) {
      // Constructing our initial HTML to add to the notes modal
      var modalText = $("<div class='container-fluid text-center'>").append(
        $("<h4>").text("Notes For Article: " + currentArticle._id),
        $("<hr>"),
        $("<ul class='list-group note-container'>"),
        $("<textarea placeholder='New Note' rows='4' cols='60'>"),
        $("<button class='btn btn-success save'>Save Note</button>")
      );
      // Adding the formatted HTML to the note modal
      bootbox.dialog({
        message: modalText,
        closeButton: true
      });
      var noteData = {
        _id: currentArticle._id,
        notes: data || []
      };
      // Adding some information about the article and article notes to the save button for easy access
      // When trying to add a new note
      $(".btn.save").data("article", noteData);
      // renderNotesList will populate the actual note HTML inside of the modal we just created/opened
      renderNotesList(noteData);
    });
  }

  function handleNoteSave() {
    // This function handles what happens when a user tries to save a new note for an article
    // Setting a variable to hold some formatted data about our note,
    // grabbing the note typed into the input box
    var noteData;
    var newNote = $(".bootbox-body textarea")
      .val()
      .trim();
    // If we actually have data typed into the note input field, format it
    // and post it to the "/api/notes" route and send the formatted noteData as well
    if (newNote) {
      noteData = { _headlineId: $(this).data("article")._id, noteText: newNote };
      $.post("/api/notes", noteData).then(function() {
        // When complete, close the modal
        bootbox.hideAll();
      });
    }
  }

  function handleNoteDelete() {
    // This function handles the deletion of notes
    // First we grab the id of the note we want to delete
    // We stored this data on the delete button when we created it
    var noteToDelete = $(this).data("_id");
    // Perform an DELETE request to "/api/notes/" with the id of the note we're deleting as a parameter
    $.ajax({
      url: "/api/notes/" + noteToDelete,
      method: "DELETE"
    }).then(function() {
      // When done, hide the modal
      bootbox.hideAll();
    });
  }

  function handleArticleClear() {
    $.get("api/clear")
      .then(function() {
        articleContainer.empty();
        initPage();
      });
  }
});

</script>
